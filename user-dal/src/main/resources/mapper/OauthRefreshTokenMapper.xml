<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wolfman.installment.user.dal.mapper.OauthRefreshTokenMapper" >
    <resultMap id="BaseResultMap" type="com.wolfman.installment.user.dal.entity.OauthRefreshToken" >
        <id column="refresh_token" property="refreshToken" jdbcType="VARCHAR" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="authorization_code" property="authorizationCode" jdbcType="VARCHAR" />
        <result column="client_id" property="clientId" jdbcType="VARCHAR" />
        <result column="device" property="device" jdbcType="VARCHAR" />
        <result column="expiration" property="expiration" jdbcType="TIMESTAMP" />
        <result column="grant_type" property="grantType" jdbcType="VARCHAR" />
        <result column="ip_address" property="ipAddress" jdbcType="VARCHAR" />
        <result column="response_type" property="responseType" jdbcType="VARCHAR" />
        <result column="revoked" property="revoked" jdbcType="BIT" />
        <result column="scope" property="scope" jdbcType="VARCHAR" />
        <result column="user_agent" property="userAgent" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List" >
        refresh_token, user_id, authorization_code, client_id, device, expiration, grant_type,
        ip_address, response_type, revoked, scope, user_agent, create_time, modify_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from oauth_refresh_token
        where refresh_token = #{refreshToken,jdbcType=VARCHAR}
    </select>

    <select id="selectByUserIdAndRevoked" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM oauth_refresh_token
        WHERE user_id = #{userId,jdbcType=BIGINT} AND revoked = #{revoked,jdbcType=BIT}
    </select>



    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from oauth_refresh_token
        where refresh_token = #{refreshToken,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.wolfman.installment.user.dal.entity.OauthRefreshToken" >
        insert into oauth_refresh_token (refresh_token, user_id, authorization_code,
        client_id, device, expiration,
        grant_type, ip_address, response_type,
        revoked, scope, user_agent,
        create_time, modify_time)
        values (#{refreshToken,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{authorizationCode,jdbcType=VARCHAR},
        #{clientId,jdbcType=VARCHAR}, #{device,jdbcType=VARCHAR}, #{expiration,jdbcType=TIMESTAMP},
        #{grantType,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR}, #{responseType,jdbcType=VARCHAR},
        #{revoked,jdbcType=BIT}, #{scope,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.wolfman.installment.user.dal.entity.OauthRefreshToken" >
        insert into oauth_refresh_token
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="refreshToken != null" >
                refresh_token,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="authorizationCode != null" >
                authorization_code,
            </if>
            <if test="clientId != null" >
                client_id,
            </if>
            <if test="device != null" >
                device,
            </if>
            <if test="expiration != null" >
                expiration,
            </if>
            <if test="grantType != null" >
                grant_type,
            </if>
            <if test="ipAddress != null" >
                ip_address,
            </if>
            <if test="responseType != null" >
                response_type,
            </if>
            <if test="revoked != null" >
                revoked,
            </if>
            <if test="scope != null" >
                scope,
            </if>
            <if test="userAgent != null" >
                user_agent,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="refreshToken != null" >
                #{refreshToken,jdbcType=VARCHAR},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="authorizationCode != null" >
                #{authorizationCode,jdbcType=VARCHAR},
            </if>
            <if test="clientId != null" >
                #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="device != null" >
                #{device,jdbcType=VARCHAR},
            </if>
            <if test="expiration != null" >
                #{expiration,jdbcType=TIMESTAMP},
            </if>
            <if test="grantType != null" >
                #{grantType,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null" >
                #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="responseType != null" >
                #{responseType,jdbcType=VARCHAR},
            </if>
            <if test="revoked != null" >
                #{revoked,jdbcType=BIT},
            </if>
            <if test="scope != null" >
                #{scope,jdbcType=VARCHAR},
            </if>
            <if test="userAgent != null" >
                #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.wolfman.installment.user.dal.entity.OauthRefreshToken" >
        update oauth_refresh_token
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="authorizationCode != null" >
                authorization_code = #{authorizationCode,jdbcType=VARCHAR},
            </if>
            <if test="clientId != null" >
                client_id = #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="device != null" >
                device = #{device,jdbcType=VARCHAR},
            </if>
            <if test="expiration != null" >
                expiration = #{expiration,jdbcType=TIMESTAMP},
            </if>
            <if test="grantType != null" >
                grant_type = #{grantType,jdbcType=VARCHAR},
            </if>
            <if test="ipAddress != null" >
                ip_address = #{ipAddress,jdbcType=VARCHAR},
            </if>
            <if test="responseType != null" >
                response_type = #{responseType,jdbcType=VARCHAR},
            </if>
            <if test="revoked != null" >
                revoked = #{revoked,jdbcType=BIT},
            </if>
            <if test="scope != null" >
                scope = #{scope,jdbcType=VARCHAR},
            </if>
            <if test="userAgent != null" >
                user_agent = #{userAgent,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where refresh_token = #{refreshToken,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.wolfman.installment.user.dal.entity.OauthRefreshToken" >
        update oauth_refresh_token
        set user_id = #{userId,jdbcType=BIGINT},
        authorization_code = #{authorizationCode,jdbcType=VARCHAR},
        client_id = #{clientId,jdbcType=VARCHAR},
        device = #{device,jdbcType=VARCHAR},
        expiration = #{expiration,jdbcType=TIMESTAMP},
        grant_type = #{grantType,jdbcType=VARCHAR},
        ip_address = #{ipAddress,jdbcType=VARCHAR},
        response_type = #{responseType,jdbcType=VARCHAR},
        revoked = #{revoked,jdbcType=BIT},
        scope = #{scope,jdbcType=VARCHAR},
        user_agent = #{userAgent,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        modify_time = #{modifyTime,jdbcType=TIMESTAMP}
        where refresh_token = #{refreshToken,jdbcType=VARCHAR}
    </update>



    <update id="updateBatch"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close=";" separator=";">
            update oauth_refresh_token
            <set>
                user_id = #{item.userId,jdbcType=BIGINT},
                authorization_code = #{item.authorizationCode,jdbcType=VARCHAR},
                client_id = #{item.clientId,jdbcType=VARCHAR},
                device = #{item.device,jdbcType=VARCHAR},
                expiration = #{item.expiration,jdbcType=TIMESTAMP},
                grant_type = #{item.grantType,jdbcType=VARCHAR},
                ip_address = #{item.ipAddress,jdbcType=VARCHAR},
                response_type = #{item.responseType,jdbcType=VARCHAR},
                revoked = #{item.revoked,jdbcType=BIT},
                scope = #{item.scope,jdbcType=VARCHAR},
                user_agent = #{item.userAgent,jdbcType=VARCHAR},
                create_time = #{item.createTime,jdbcType=TIMESTAMP},
                modify_time = #{item.modifyTime,jdbcType=TIMESTAMP}
            </set>
            where refresh_token = #{item.refreshToken,jdbcType=VARCHAR}
        </foreach>
    </update>





</mapper>